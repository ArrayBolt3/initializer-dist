#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Whonix First Run Initializer Gui gets started as user "user" by
## /etc/profile.d/25_first_run_initializer.sh.

#set -x

## Extra precaution against this script getting automatically by dpkg after
## running apt-get. If the environment variable DPKG_MAINTSCRIPT_PACKAGE is
## set, then this script was started by apt-get -> dpkg -> invoke-rc.d.
if [ ! "$DPKG_MAINTSCRIPT_PACKAGE" = "" ]; then
   echo "INFO $0: Run by package manager. Exiting. Ok."
   exit 0
fi

colors() {
   ## Thanks to:
   ## http://mywiki.wooledge.org/BashFAQ/037
   ## Variables for terminal requests.
   [[ -t 2 ]] && {
       alt=$(      tput smcup  || tput ti      ) # Start alt display
       ealt=$(     tput rmcup  || tput te      ) # End   alt display
       hide=$(     tput civis  || tput vi      ) # Hide cursor
       show=$(     tput cnorm  || tput ve      ) # Show cursor
       save=$(     tput sc                     ) # Save cursor
       load=$(     tput rc                     ) # Load cursor
       bold=$(     tput bold   || tput md      ) # Start bold
       stout=$(    tput smso   || tput so      ) # Start stand-out
       estout=$(   tput rmso   || tput se      ) # End stand-out
       under=$(    tput smul   || tput us      ) # Start underline
       eunder=$(   tput rmul   || tput ue      ) # End   underline
       reset=$(    tput sgr0   || tput me      ) # Reset cursor
       blink=$(    tput blink  || tput mb      ) # Start blinking
       italic=$(   tput sitm   || tput ZH      ) # Start italic
       eitalic=$(  tput ritm   || tput ZR      ) # End   italic
   [[ $TERM != *-m ]] && {
       red=$(      tput setaf 1|| tput AF 1    )
       green=$(    tput setaf 2|| tput AF 2    )
       yellow=$(   tput setaf 3|| tput AF 3    )
       blue=$(     tput setaf 4|| tput AF 4    )
       magenta=$(  tput setaf 5|| tput AF 5    )
       cyan=$(     tput setaf 6|| tput AF 6    )
   }
       white=$(    tput setaf 7|| tput AF 7    )
       default=$(  tput op                     )
       eed=$(      tput ed     || tput cd      )   # Erase to end of display
       eel=$(      tput el     || tput ce      )   # Erase to end of line
       ebl=$(      tput el1    || tput cb      )   # Erase to beginning of line
       ewl=$eel$ebl                                # Erase whole line
       draw=$(     tput -S <<< '   enacs
                                   smacs
                                   acsc
                                   rmacs' || { \
                   tput eA; tput as;
                   tput ac; tput ae;         } )   # Drawing characters
       back=$'\b'
   } 2>/dev/null ||:
}

colors

fake_progress_bar() {
   while true; do
      ps -p $sleeppid_one $sleeppid_two $sleeppid_three $sleeppid_four $first_run_initializer_pid >/dev/null 2>&1
      if [ "$?" = "0" ]; then
         ## some pid is still running
         echo -n "."
         sleep 1 &
         wait "$!"
      else
         ## no pids running anymore
         echo ""
         break
      fi
   done
}

## need to use hardcoded "/root/" instead of "~/", because "~/" does not exist
## when run through an init script.
mkdir --parents "/root/.whonix/"
log_file="/root/.whonix/first_run_initializer.log"
start_file="/root/.whonix/first_run_initializer.start"
done_file="/root/.whonix/first_run_initializer.done"

## Check if Whonix First Run Initializer already finished, exit if so.
if [ -f "$done_file" ]; then
   exit 0
fi

## Log, that Whonix First Run Initializer attempted to start. This is useful in
## eventual case of bug reports.
touch "$start_file"
sync

echo "\
[${cyan}${bold}INFO${reset}] [${cyan}Whonix First Run Initializer${reset}]: Preparing Whonix... Will reboot when finished...
       ${cyan}${under}Do not interrupt this process or your system might be unstable!${reset}
       ${under}This may take a while...${reset}"

## The sleep is just in for the look an feel.
sleep 10 &
sleeppid_one="$!"

/usr/lib/first_run_initializer >> "$log_file" 2>&1 &
first_run_initializer_pid="$!"
fake_progress_bar
sync

wait "$first_run_initializer_pid"
first_run_initializer_exit_code="$?"

touch "$done_file"
sync

if [ "$first_run_initializer_exit_code" = "0" ]; then
   echo "[${cyan}${bold}INFO${reset}] [${cyan}Whonix First Run Initializer${reset}]: Done. Rebooting... ${under}This may take a while...${eunder}"
else
   echo "\
[${red}${bold}ERROR${reset}] [${cyan}Whonix First Run Initializer${reset}]: Error!
        ${under}Please report this Whonix bug! Submit Whonix First Run Initializer's${reset}
        ${under}log file $log_file to Whonix developers!${reset}
        Rebooting... ${under}This may take a while...${reset}"
fi

## The sleep is just in for the look an feel.
sleep 10 &
sleeppid_two="$!"
fake_progress_bar

## Workaround for CI compatibility.
if [ "$CI" = "true" ]; then
   ## Do not try to reboot Travis CI!
   ## Otherwise you'll run into...
   ## "I'm sorry but there was an error with the connection to the VM.
   ## Your job will be requeued shortly."
   echo "[${cyan}${bold}INFO${reset}] [${cyan}Whonix First Run Initializer${reset}]: CI detected. Skipping reboot."
else
   reboot & disown
fi

## The sleep is just in for the look an feel.
sleep 60 &
sleeppid_three="$!"
fake_progress_bar

echo "[${red}${bold}ERROR${reset}] [${cyan}Whonix First Run Initializer${reset}]: Rebooting not done after 60 seconds. Please report this Whonix bug!"

## Sleep, so this message has a chance of being read.
sleep 10 &
sleeppid_four="$!"
fake_progress_bar

exit 0
